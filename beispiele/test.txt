Payment ersteEinzahlung = new Payment("17.09.2009", "1. Einzahlung", 569.4912);
        Payment zweiteEinzahlung = new Payment("27.10.2017", "2. Einzahlung", 1090, 0.5, 1);
        Payment auszahlung = new Payment("30.03.1980", "Auszahlung", -10983, 0.6, 0.789);
        Payment payment = new Payment(auszahlung);

        System.out.print("\nTesting toString() method:\nerste Einzahlung:" +
                "\n\t\tExpected:\tDate: 17.09.2009, Description: 1. Einzahlung, Amount: 569.4912 €, Incoming Interest: 0.0, Out-coming Interest: 0.0" +
                "\n\t\tResult:\t\t" + ersteEinzahlung +
                "\nzweite Einzahlung:\n\t\tExpected:\tDate: 27.10.2017, Description: 2. Einzahlung, Amount: 1090.0 €, Incoming Interest: 0.5, Out-coming Interest: 1.0" +
                "\n\t\tResult:\t\t" + zweiteEinzahlung +
                "\nauszahlung:\n\t\tExpected:\tDate: 30.03.1980, Description: Auszahlung, Amount: -19648.587 €, Incoming Interest: 0.6, Out-coming Interest: 0.789" +
                "\n\t\tResult:\t\t" + auszahlung +
                "\npayment:\n\t\tExpected:\tDate: 30.03.1980, Description: Auszahlung, Amount: -19648.587 €, Incoming Interest: 0.6, Out-coming Interest: 0.789" +
                "\n\t\tResult:\t\t" + payment);

        System.out.println("\nTesting equals() method:\nerste Einzahlung vs zweite Einzahlung expected <false> => "
                + ersteEinzahlung.equals(zweiteEinzahlung) +
                "\nzweite Einzahlung vs Auszahlung expected <false> => " + zweiteEinzahlung.equals(auszahlung) +
                "\nauszahlung vs payment expected <true> => " + auszahlung.equals(payment) + "\n\n");


        Transfer firstTransfer = new Transfer("17.09.2009", "1. Einzahlung", 569.4912);
        Transfer secondTransfer = new Transfer("23.08.2222", "2. Transfer", 200.5, "Tom", "Jonas");
        Transfer thirdTransfer = new Transfer("08.05.2000", "3. Transfer", 1248, "Violett", "Brause");
        Transfer transfer = new Transfer(secondTransfer);

        System.out.println("Testing toString() method:\nfirstTransfer:" +
                "\n\t\tExpected:\tDate: 17.09.2009, Description: 1. Einzahlung, Amount: 569.4912 €, Sender: null, Recipient: null\n\t\tResult:\t\t" + firstTransfer +
                "\nsecondTransfer:\n\t\tExpected:\tDate: 23.08.2222, Description: 2. Transfer, Amount: 200.5 €, Sender: Tom, Recipient: Jonas\n\t\tResult:\t\t" + secondTransfer +
                "\nthirdTransfer:\n\t\tExpected:\tDate: 08.05.2000, Description: 3. Transfer, Amount: 1248.0 €, Sender: Violett, Recipient: Brause\n\t\tResult:\t\t" + thirdTransfer +
                "\ntransfer:\n\t\tExpected:\tDate: 23.08.2222, Description: 2. Transfer, Amount: 200.5 €, Sender: Tom, Recipient: Jonas\n\t\tResult:\t\t" + transfer);

        System.out.println("Testing equals() method:\npayment vs first Transfer expected <false> => " + payment.toString().equals(firstTransfer.toString()) +
                "\nfirst Transfer vs second Transfer expected <false> => " + firstTransfer.equals(secondTransfer) +
                "\nsecond Transfer vs third Transfer expected <false> => " + secondTransfer.equals(thirdTransfer) +
                "\nsecond Transfer vs transfer expected <true> => " + secondTransfer.equals(transfer));
